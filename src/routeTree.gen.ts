/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ExpenseImport } from './routes/expense'
import { Route as AuthImport } from './routes/auth'
import { Route as IndexImport } from './routes/index'
import { Route as ExpenseDashboardImport } from './routes/expense/dashboard'
import { Route as AuthRegisterIndexImport } from './routes/auth/register/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as AuthCallbackIndexImport } from './routes/auth/callback/index'

// Create/Update Routes

const ExpenseRoute = ExpenseImport.update({
  id: '/expense',
  path: '/expense',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExpenseDashboardRoute = ExpenseDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ExpenseRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCallbackIndexRoute = AuthCallbackIndexImport.update({
  id: '/callback/',
  path: '/callback/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/expense': {
      id: '/expense'
      path: '/expense'
      fullPath: '/expense'
      preLoaderRoute: typeof ExpenseImport
      parentRoute: typeof rootRoute
    }
    '/expense/dashboard': {
      id: '/expense/dashboard'
      path: '/dashboard'
      fullPath: '/expense/dashboard'
      preLoaderRoute: typeof ExpenseDashboardImport
      parentRoute: typeof ExpenseImport
    }
    '/auth/callback/': {
      id: '/auth/callback/'
      path: '/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackIndexImport
      parentRoute: typeof AuthImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthCallbackIndexRoute: typeof AuthCallbackIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCallbackIndexRoute: AuthCallbackIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ExpenseRouteChildren {
  ExpenseDashboardRoute: typeof ExpenseDashboardRoute
}

const ExpenseRouteChildren: ExpenseRouteChildren = {
  ExpenseDashboardRoute: ExpenseDashboardRoute,
}

const ExpenseRouteWithChildren =
  ExpenseRoute._addFileChildren(ExpenseRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/expense': typeof ExpenseRouteWithChildren
  '/expense/dashboard': typeof ExpenseDashboardRoute
  '/auth/callback': typeof AuthCallbackIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/expense': typeof ExpenseRouteWithChildren
  '/expense/dashboard': typeof ExpenseDashboardRoute
  '/auth/callback': typeof AuthCallbackIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/expense': typeof ExpenseRouteWithChildren
  '/expense/dashboard': typeof ExpenseDashboardRoute
  '/auth/callback/': typeof AuthCallbackIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/expense'
    | '/expense/dashboard'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/expense'
    | '/expense/dashboard'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/register'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/expense'
    | '/expense/dashboard'
    | '/auth/callback/'
    | '/auth/login/'
    | '/auth/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ExpenseRoute: typeof ExpenseRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ExpenseRoute: ExpenseRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/expense"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/callback/",
        "/auth/login/",
        "/auth/register/"
      ]
    },
    "/expense": {
      "filePath": "expense.tsx",
      "children": [
        "/expense/dashboard"
      ]
    },
    "/expense/dashboard": {
      "filePath": "expense/dashboard.tsx",
      "parent": "/expense"
    },
    "/auth/callback/": {
      "filePath": "auth/callback/index.tsx",
      "parent": "/auth"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx",
      "parent": "/auth"
    },
    "/auth/register/": {
      "filePath": "auth/register/index.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
